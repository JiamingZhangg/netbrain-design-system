import { Auto, ILogger, IPlugin, SEMVER } from '@auto-it/core';
export declare function greaterRelease(prefixRelease: (release: string) => string, name: string, packageVersion: string): Promise<string>;
interface IMonorepoPackage {
    path: string;
    name: string;
    version: string;
}
interface ChangedPackagesArgs {
    sha: string;
    packages: IMonorepoPackage[];
    lernaJson: {
        version?: string;
    };
    logger: ILogger;
    version?: SEMVER;
}
export declare function changedPackages({ sha, packages, lernaJson, logger, version }: ChangedPackagesArgs): Promise<string[]>;
export declare function getMonorepoPackage(): IPackageJSON;
interface INpmConfig {
    setRcToken?: boolean;
    forcePublish?: boolean;
}
export default class NPMPlugin implements IPlugin {
    name: string;
    private readonly setRcToken;
    private readonly forcePublish;
    constructor(config?: INpmConfig);
    getLernaPackages(): Promise<{
        path: string;
        name: string;
        version: string;
    }[]>;
    getIndependentPackageList(): Promise<string>;
    apply(auto: Auto): void;
}
export {};
//# sourceMappingURL=index.d.ts.map