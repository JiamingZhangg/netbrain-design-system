#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = tslib_1.__importDefault(require("@auto-it/core"));
async function run(command, args) {
    const auto = new core_1.default(args);
    switch (command) {
        case 'init':
            await auto.init(args);
            break;
        case 'create-labels':
            await auto.loadConfig();
            await auto.createLabels(args);
            break;
        case 'label':
            await auto.loadConfig();
            await auto.label(args);
            break;
        case 'pr-check':
            await auto.loadConfig();
            await auto.prCheck(args);
            break;
        case 'pr-status':
            await auto.loadConfig();
            await auto.prStatus(args);
            break;
        case 'comment':
            await auto.loadConfig();
            await auto.comment(args);
            break;
        case 'pr-body':
            await auto.loadConfig();
            await auto.prBody(args);
            break;
        case 'version':
            await auto.loadConfig();
            await auto.version(args);
            break;
        case 'changelog':
            await auto.loadConfig();
            await auto.changelog(args);
            break;
        case 'release':
            await auto.loadConfig();
            await auto.runRelease(args);
            break;
        case 'shipit':
            await auto.loadConfig();
            await auto.shipit(args);
            break;
        case 'canary':
            await auto.loadConfig();
            await auto.canary(args);
            break;
        default:
            throw new Error(`idk what i'm doing.`);
    }
}
exports.run = run;
async function main(command, args) {
    try {
        await run(command, args);
    }
    catch (error) {
        if (error) {
            console.log(error);
            process.exit(1);
        }
    }
}
exports.default = main;
//# sourceMappingURL=run.js.map